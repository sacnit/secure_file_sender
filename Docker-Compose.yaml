services:
  capture:
    build:
      context: .
      dockerfile: capture_dockerfile
    networks:
      - p2p_network
    volumes:
      - ./traffic_capture:/traffic_capture

  ultrapeer_1:
    build:
      context: .
      dockerfile: node_dockerfile
    stdin_open: true
    tty: true
    networks:
      - p2p_network
    volumes:
      - ./logs:/app/logs
    command: >
      bash -c "python sfs.py --mode ultrapeer --forest-port 4441"

  leaf_1:
    build:
      context: .
      dockerfile: node_dockerfile
    stdin_open: true
    tty: true
    networks: 
      - p2p_network
    volumes:
      - ./logs:/app/logs
    command: >
      bash -c "python sfs.py --ultrapeer ultrapeer_1"

  leaf_2:
    build:
      context: .
      dockerfile: node_dockerfile
    stdin_open: true
    tty: true
    networks: 
      - p2p_network
    volumes:
      - ./logs:/app/logs
    command: >
      bash -c "python sfs.py --ultrapeer ultrapeer_1"

  ultrapeer_2:
    build:
      context: .
      dockerfile: node_dockerfile
    stdin_open: true
    tty: true
    networks:
      - p2p_network
    volumes:
      - ./logs:/app/logs
    command: >
      bash -c "python sfs.py --mode ultrapeer --ultrapeer ultrapeer_1 --ultrapeer-port 4441 --port 9998 --join True"

  leaf_3:
    build:
      context: .
      dockerfile: node_dockerfile
    stdin_open: true
    tty: true
    networks: 
      - p2p_network
    volumes:
      - ./logs:/app/logs
    command: >
      bash -c "python sfs.py --ultrapeer ultrapeer_2 --port 9998"

  leaf_4:
    build:
      context: .
      dockerfile: node_dockerfile
    stdin_open: true
    tty: true
    networks: 
      - p2p_network
    volumes:
      - ./logs:/app/logs
    command: >
      bash -c "python sfs.py --ultrapeer ultrapeer_2 --port 9998"

networks:
  p2p_network:
    driver: bridge
